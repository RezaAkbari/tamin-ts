with data as (

    with
        products as (
            with
                group_compiuter as (
                    with
                        productsInfo as (
                            with
                                products as (
                                    select p.id as product_id , p.NAME as product_name , p.full_name as product_full_Name , p.CODE as product_code , CAPACITY_ID , FULL_CODE , ACTIVE
                                    from wh_product as p
                                ) ,
                                product_attr as (
                                    select wcf.name product_attr_name , wpad.REFERENCE_ID as product_id , wpad.content as product_attr_value , wpa.BAR_CODE  as product_bar_code , wpa.id as product_attr_id
                                    from WH_PR_ATTRIBUTE_DETAIL as wpad
                                             join wh_product_attribute as wpa on wpad.REFERENCE_ID = wpa.REFERENCE_ID and wpad.attribute_id = wpa.id
                                             join wh_custom_fields as wcf on wpad.field_id = wcf.id
                                ) ,
                                stock_capacity as (
                                    select id , DECIMAL_NUM
                                    from WH_STOCK_CAPACITY as wsp
                                )
                            select p.product_id, p.product_name, p.product_full_Name, p.product_code , p.FULL_CODE, p.ACTIVE,
                                   pa.product_attr_name, product_attr_value, product_bar_code, product_attr_id ,
                                   sc.DECIMAL_NUM
                            from products as p
                                     left join stock_capacity as sc  on p.CAPACITY_ID = sc.id
                                     left join product_attr as pa on p.product_id = pa.product_id
                        ),
                        productGroup as (
                            with
                                pGroups as  (
                                    WITH
                                        RECURSIVE ProductHierarchyInternal AS (
                                        SELECT
                                            id,
                                            MODULE_PARENT_ID,
                                            PARENT_ID,
                                            LEVEL,
                                            MODULE_LEVEL,
                                            NAME,
                                            TYPE,
                                            MODULE_ID,
                                            product_id
                                        FROM
                                            WH_SETTING_PRODUCT_INFO
                                        WHERE MODULE_ID = 23 AND VOUCHER_ALLOW = 0 AND TYPE = 1 AND MODULE_PARENT_ID = 12648
                                        UNION ALL
                                        SELECT
                                            c.id, c.MODULE_PARENT_ID, c.PARENT_ID, c.LEVEL, c.MODULE_LEVEL, c.NAME, c.TYPE, c.MODULE_ID , c.product_id
                                        FROM
                                            WH_SETTING_PRODUCT_INFO c
                                                INNER JOIN ProductHierarchyInternal p ON p.id = c.MODULE_PARENT_ID)
                                    select * from ProductHierarchyInternal
                                ),
                                pGroupLast as (
                                    WITH RECURSIVE recursive_cte AS (
                                        SELECT id, name, MODULE_PARENT_ID as parent , PRODUCT_ID
                                        FROM pGroups
                                        WHERE id NOT IN (SELECT MODULE_PARENT_ID FROM pGroups WHERE MODULE_PARENT_ID IS NOT NULL)
                                        UNION ALL
                                        SELECT t.id, t.name, t.MODULE_PARENT_ID , r.PRODUCT_ID
                                        FROM pGroups t
                                                 INNER JOIN recursive_cte r ON t.MODULE_PARENT_ID = r.id
                                    )
                                    SELECT id, name , parent , PRODUCT_ID
                                    FROM recursive_cte
                                )
                            select wspi.id as group_product_id , wspi.name as group_product_name , pgl.PRODUCT_ID
                            from pGroupLast as pgl
                             left join WH_SETTING_PRODUCT_INFO as wspi on pgl.parent = wspi.id
                        )
                    select distinct  pi.product_id, pi.product_name, pi.product_full_Name, pi.product_code , pi.product_attr_value , pi.FULL_CODE, pi.ACTIVE ,
                                     pi.DECIMAL_NUM ,
                                     pg.group_product_id, pg.group_product_name
                    from productsInfo as pi
                             join productGroup as pg on pi.product_id = pg.PRODUCT_ID
                ) ,
                group_mobili as (
                    with
                        productsInfo as (
                            with
                                products as (
                                    select p.id as product_id , p.NAME as product_name , p.full_name as product_full_Name , p.CODE as product_code , CAPACITY_ID , FULL_CODE , ACTIVE
                                    from wh_product as p
                                ) ,
                                product_attr as (
                                    select wcf.name product_attr_name , wpad.REFERENCE_ID as product_id , wpad.content as product_attr_value , wpa.BAR_CODE  as product_bar_code , wpa.id as product_attr_id
                                    from WH_PR_ATTRIBUTE_DETAIL as wpad
                                             join wh_product_attribute as wpa on wpad.REFERENCE_ID = wpa.REFERENCE_ID and wpad.attribute_id = wpa.id
                                             join wh_custom_fields as wcf on wpad.field_id = wcf.id
                                ) ,
                                stock_capacity as (
                                    select id , DECIMAL_NUM
                                    from WH_STOCK_CAPACITY as wsp
                                )
                            select p.product_id, p.product_name, p.product_full_Name, p.product_code , p.FULL_CODE, p.ACTIVE ,
                                   pa.product_attr_name, product_attr_value, product_bar_code, product_attr_id ,
                                   sc.DECIMAL_NUM
                            from products as p
                                     left join stock_capacity as sc  on p.CAPACITY_ID = sc.id
                                     left join product_attr as pa on p.product_id = pa.product_id
                        ),
                        productGroup as (
                            with
                                pGroups as  (
                                    WITH
                                        RECURSIVE ProductHierarchyInternal AS (
                                        SELECT
                                            id,
                                            MODULE_PARENT_ID,
                                            PARENT_ID,
                                            LEVEL,
                                            MODULE_LEVEL,
                                            NAME,
                                            TYPE,
                                            MODULE_ID,
                                            product_id
                                        FROM
                                            WH_SETTING_PRODUCT_INFO
                                        WHERE MODULE_ID = 23 AND VOUCHER_ALLOW = 0 AND TYPE = 1 AND MODULE_PARENT_ID = 12905
                                        UNION ALL
                                        SELECT
                                            c.id, c.MODULE_PARENT_ID, c.PARENT_ID, c.LEVEL, c.MODULE_LEVEL, c.NAME, c.TYPE, c.MODULE_ID , c.product_id
                                        FROM
                                            WH_SETTING_PRODUCT_INFO c
                                                INNER JOIN ProductHierarchyInternal p ON p.id = c.MODULE_PARENT_ID)
                                    select * from ProductHierarchyInternal
                                ),
                                pGroupLast as (
                                    WITH RECURSIVE recursive_cte AS (
                                        SELECT id, name, MODULE_PARENT_ID as parent , PRODUCT_ID
                                        FROM pGroups
                                        WHERE id NOT IN (SELECT MODULE_PARENT_ID FROM pGroups WHERE MODULE_PARENT_ID IS NOT NULL)
                                        UNION ALL
                                        SELECT t.id, t.name, t.MODULE_PARENT_ID , r.PRODUCT_ID
                                        FROM pGroups t
                                                 INNER JOIN recursive_cte r ON t.MODULE_PARENT_ID = r.id
                                    )
                                    SELECT id, name , parent , PRODUCT_ID
                                    FROM recursive_cte
                                )
                            select wspi.id as group_product_id , wspi.name as group_product_name , pgl.PRODUCT_ID
                            from pGroupLast as pgl
                                     left join WH_SETTING_PRODUCT_INFO as wspi on pgl.parent = wspi.id
                        )
                    select distinct  pi.product_id, pi.product_name, pi.product_full_Name, pi.product_code , pi.product_attr_value , pi.FULL_CODE, pi.ACTIVE ,
                                     pi.DECIMAL_NUM ,
                                     pg.group_product_id, pg.group_product_name
                    from productsInfo as pi
                             join productGroup as pg on pi.product_id = pg.PRODUCT_ID
                ),
                group_soti as (
                    with
                        productsInfo as (
                            with
                                products as (
                                    select p.id as product_id , p.NAME as product_name , p.full_name as product_full_Name , p.CODE as product_code , CAPACITY_ID ,FULL_CODE , ACTIVE
                                    from wh_product as p
                                ) ,
                                product_attr as (
                                    select wcf.name product_attr_name , wpad.REFERENCE_ID as product_id , wpad.content as product_attr_value , wpa.BAR_CODE  as product_bar_code , wpa.id as product_attr_id
                                    from WH_PR_ATTRIBUTE_DETAIL as wpad
                                             join wh_product_attribute as wpa on wpad.REFERENCE_ID = wpa.REFERENCE_ID and wpad.attribute_id = wpa.id
                                             join wh_custom_fields as wcf on wpad.field_id = wcf.id
                                ) ,
                                stock_capacity as (
                                    select id , DECIMAL_NUM
                                    from WH_STOCK_CAPACITY as wsp
                                )
                            select p.product_id, p.product_name, p.product_full_Name, p.product_code , p.FULL_CODE , p.ACTIVE ,
                                   pa.product_attr_name, product_attr_value, product_bar_code, product_attr_id ,
                                   sc.DECIMAL_NUM
                            from products as p
                                     left join stock_capacity as sc  on p.CAPACITY_ID = sc.id
                                     left join product_attr as pa on p.product_id = pa.product_id
                        ),
                        productGroup as (
                            with
                                pGroups as  (
                                    WITH
                                        RECURSIVE ProductHierarchyInternal AS (
                                        SELECT
                                            id,
                                            MODULE_PARENT_ID,
                                            PARENT_ID,
                                            LEVEL,
                                            MODULE_LEVEL,
                                            NAME,
                                            TYPE,
                                            MODULE_ID,
                                            product_id
                                        FROM
                                            WH_SETTING_PRODUCT_INFO
                                        WHERE MODULE_ID = 23 AND VOUCHER_ALLOW = 0 AND TYPE = 1 AND MODULE_PARENT_ID = 13076
                                        UNION ALL
                                        SELECT
                                            c.id, c.MODULE_PARENT_ID, c.PARENT_ID, c.LEVEL, c.MODULE_LEVEL, c.NAME, c.TYPE, c.MODULE_ID , c.product_id
                                        FROM
                                            WH_SETTING_PRODUCT_INFO c
                                                INNER JOIN ProductHierarchyInternal p ON p.id = c.MODULE_PARENT_ID)
                                    select * from ProductHierarchyInternal
                                ),
                                pGroupLast as (
                                    WITH RECURSIVE recursive_cte AS (
                                        SELECT id, name, MODULE_PARENT_ID as parent , PRODUCT_ID
                                        FROM pGroups
                                        WHERE id NOT IN (SELECT MODULE_PARENT_ID FROM pGroups WHERE MODULE_PARENT_ID IS NOT NULL)
                                        UNION ALL
                                        SELECT t.id, t.name, t.MODULE_PARENT_ID , r.PRODUCT_ID
                                        FROM pGroups t
                                                 INNER JOIN recursive_cte r ON t.MODULE_PARENT_ID = r.id
                                    )
                                    SELECT id, name , parent , PRODUCT_ID
                                    FROM recursive_cte
                                )
                            select wspi.id as group_product_id , wspi.name as group_product_name , pgl.PRODUCT_ID
                            from pGroupLast as pgl
                                     left join WH_SETTING_PRODUCT_INFO as wspi on pgl.parent = wspi.id
                        )
                    select distinct  pi.product_id, pi.product_name, pi.product_full_Name, pi.product_code , pi.product_attr_value , pi.FULL_CODE , pi.ACTIVE ,
                                     pi.DECIMAL_NUM ,
                                     pg.group_product_id, pg.group_product_name
                    from productsInfo as pi
                             join productGroup as pg on pi.product_id = pg.PRODUCT_ID
                ),
                group_motefareghe as (
                    select wspi2.id as group_product_id, wspi2.name as group_product_name ,wp.id as product_id, wp.full_name as  product_full_Name ,FULL_CODE , ACTIVE
                    from WH_SETTING_PRODUCT_INFO as wspi
                             join wh_product as wp on wspi.PRODUCT_ID = wp.id
                             join WH_SETTING_PRODUCT_INFO as wspi2 on wspi.MODULE_PARENT_ID = wspi2.id
                    where wspi.MODULE_PARENT_ID = 18721
                ),
                group_sazmani as (
                    with
                        productsInfo as (
                            with
                                products as (
                                    select p.id as product_id , p.NAME as product_name , p.full_name as product_full_Name , p.CODE as product_code , CAPACITY_ID ,FULL_CODE , ACTIVE
                                    from wh_product as p
                                ) ,
                                product_attr as (
                                    select wcf.name product_attr_name , wpad.REFERENCE_ID as product_id , wpad.content as product_attr_value , wpa.BAR_CODE  as product_bar_code , wpa.id as product_attr_id
                                    from WH_PR_ATTRIBUTE_DETAIL as wpad
                                             join wh_product_attribute as wpa on wpad.REFERENCE_ID = wpa.REFERENCE_ID and wpad.attribute_id = wpa.id
                                             join wh_custom_fields as wcf on wpad.field_id = wcf.id
                                ) ,
                                stock_capacity as (
                                    select id , DECIMAL_NUM
                                    from WH_STOCK_CAPACITY as wsp
                                )
                            select p.product_id, p.product_name, p.product_full_Name, p.product_code , p.ACTIVE ,
                                   pa.product_attr_name, product_attr_value, product_bar_code, product_attr_id ,p.FULL_CODE,
                                   sc.DECIMAL_NUM
                            from products as p
                                     left join stock_capacity as sc  on p.CAPACITY_ID = sc.id
                                     left join product_attr as pa on p.product_id = pa.product_id
                        ),
                        productGroup as (
                            with
                                pGroups as  (
                                    WITH
                                        RECURSIVE ProductHierarchyInternal AS (
                                        SELECT
                                            id,
                                            MODULE_PARENT_ID,
                                            PARENT_ID,
                                            LEVEL,
                                            MODULE_LEVEL,
                                            NAME,
                                            TYPE,
                                            MODULE_ID,
                                            product_id
                                        FROM
                                            WH_SETTING_PRODUCT_INFO
                                        WHERE MODULE_ID = 23 AND VOUCHER_ALLOW = 0 AND TYPE = 1 AND MODULE_PARENT_ID = 32109
                                        UNION ALL
                                        SELECT
                                            c.id, c.MODULE_PARENT_ID, c.PARENT_ID, c.LEVEL, c.MODULE_LEVEL, c.NAME, c.TYPE, c.MODULE_ID , c.product_id
                                        FROM
                                            WH_SETTING_PRODUCT_INFO c
                                                INNER JOIN ProductHierarchyInternal p ON p.id = c.MODULE_PARENT_ID)
                                    select * from ProductHierarchyInternal
                                ),
                                pGroupLast as (
                                    WITH RECURSIVE recursive_cte AS (
                                        SELECT id, name, MODULE_PARENT_ID as parent , PRODUCT_ID
                                        FROM pGroups
                                        WHERE id NOT IN (SELECT MODULE_PARENT_ID FROM pGroups WHERE MODULE_PARENT_ID IS NOT NULL)
                                        UNION ALL
                                        SELECT t.id, t.name, t.MODULE_PARENT_ID , r.PRODUCT_ID
                                        FROM pGroups t
                                                 INNER JOIN recursive_cte r ON t.MODULE_PARENT_ID = r.id
                                    )
                                    SELECT id, name , parent , PRODUCT_ID
                                    FROM recursive_cte
                                )
                            select wspi.id as group_product_id , wspi.name as group_product_name , pgl.PRODUCT_ID
                            from pGroupLast as pgl
                                     left join WH_SETTING_PRODUCT_INFO as wspi on pgl.parent = wspi.id
                        )
                    select distinct  pi.product_id, pi.product_name, pi.product_full_Name, pi.product_code , pi.product_attr_value , pi.FULL_CODE, pi.ACTIVE ,
                                     pi.DECIMAL_NUM ,
                                     pg.group_product_id, pg.group_product_name
                    from productsInfo as pi
                             join productGroup as pg on pi.product_id = pg.PRODUCT_ID
                ),
                group_gaming as (
                    with
                        productsInfo as (
                            with
                                products as (
                                    select p.id as product_id , p.NAME as product_name , p.full_name as product_full_Name , p.CODE as product_code , CAPACITY_ID ,FULL_CODE , ACTIVE
                                    from wh_product as p
                                ) ,
                                product_attr as (
                                    select wcf.name product_attr_name , wpad.REFERENCE_ID as product_id , wpad.content as product_attr_value , wpa.BAR_CODE  as product_bar_code , wpa.id as product_attr_id
                                    from WH_PR_ATTRIBUTE_DETAIL as wpad
                                             join wh_product_attribute as wpa on wpad.REFERENCE_ID = wpa.REFERENCE_ID and wpad.attribute_id = wpa.id
                                             join wh_custom_fields as wcf on wpad.field_id = wcf.id
                                ) ,
                                stock_capacity as (
                                    select id , DECIMAL_NUM
                                    from WH_STOCK_CAPACITY as wsp
                                )
                            select p.product_id, p.product_name, p.product_full_Name, p.product_code , p.ACTIVE ,
                                   pa.product_attr_name, product_attr_value, product_bar_code, product_attr_id ,p.FULL_CODE,
                                   sc.DECIMAL_NUM
                            from products as p
                                     left join stock_capacity as sc  on p.CAPACITY_ID = sc.id
                                     left join product_attr as pa on p.product_id = pa.product_id
                        ),
                        productGroup as (
                            with
                                pGroups as  (
                                    WITH
                                        RECURSIVE ProductHierarchyInternal AS (
                                        SELECT
                                            id,
                                            MODULE_PARENT_ID,
                                            PARENT_ID,
                                            LEVEL,
                                            MODULE_LEVEL,
                                            NAME,
                                            TYPE,
                                            MODULE_ID,
                                            product_id
                                        FROM
                                            WH_SETTING_PRODUCT_INFO
                                        WHERE MODULE_ID = 23 AND VOUCHER_ALLOW = 0 AND TYPE = 1 AND MODULE_PARENT_ID = 32367
                                        UNION ALL
                                        SELECT
                                            c.id, c.MODULE_PARENT_ID, c.PARENT_ID, c.LEVEL, c.MODULE_LEVEL, c.NAME, c.TYPE, c.MODULE_ID , c.product_id
                                        FROM
                                            WH_SETTING_PRODUCT_INFO c
                                                INNER JOIN ProductHierarchyInternal p ON p.id = c.MODULE_PARENT_ID)
                                    select * from ProductHierarchyInternal
                                ),
                                pGroupLast as (
                                    WITH RECURSIVE recursive_cte AS (
                                        SELECT id, name, MODULE_PARENT_ID as parent , PRODUCT_ID
                                        FROM pGroups
                                        WHERE id NOT IN (SELECT MODULE_PARENT_ID FROM pGroups WHERE MODULE_PARENT_ID IS NOT NULL)
                                        UNION ALL
                                        SELECT t.id, t.name, t.MODULE_PARENT_ID , r.PRODUCT_ID
                                        FROM pGroups t
                                                 INNER JOIN recursive_cte r ON t.MODULE_PARENT_ID = r.id
                                    )
                                    SELECT id, name , parent , PRODUCT_ID
                                    FROM recursive_cte
                                )
                            select wspi.id as group_product_id , wspi.name as group_product_name , pgl.PRODUCT_ID
                            from pGroupLast as pgl
                                     left join WH_SETTING_PRODUCT_INFO as wspi on pgl.parent = wspi.id
                        )
                    select distinct  pi.product_id, pi.product_name, pi.product_full_Name, pi.product_code , pi.product_attr_value ,pi.FULL_CODE, pi.ACTIVE ,
                                     pi.DECIMAL_NUM ,
                                     pg.group_product_id, pg.group_product_name
                    from productsInfo as pi
                             join productGroup as pg on pi.product_id = pg.PRODUCT_ID
                )
            select distinct product_id, product_full_Name , active ,FULL_CODE from group_compiuter
            union
            select distinct product_id, product_full_Name , active  ,FULL_CODE from group_mobili
            union
            select distinct product_id, product_full_Name , active ,FULL_CODE from group_soti
            union
            select distinct product_id, product_full_Name , active ,FULL_CODE from group_motefareghe
            union
            select distinct product_id, product_full_Name , ACTIVE ,FULL_CODE from group_sazmani
            union
            select distinct product_id, product_full_Name , active ,FULL_CODE from group_gaming
        ) ,
         cardex as (
             with
                 org as (
                     select id from org_info
                     where id =2
                 ),
                 product as (
                     select id , FULL_CODE , full_name , ORG_ID , CAPACITY_ID
                     from wh_product
                 ),
                 capacity as (
                     select id , DECIMAL_NUM
                     from wh_stock_capacity
                     where DELETED = 0
                 ),
                 stock as (
                     select *
                     from wh_stock as ws
                     where ws.DELETED = 0
                       and ws.id=4
                 ) ,
                 cardex as (
                     with
                         operation as (
                             select id , org_id  from wh_operation
                             where DELETED=0
                               and DATE_OPERATION >= 133553664000000000
                               and DATE_OPERATION <=133654340678250000+24*60*60*10000000
                         ),
                         operation_details as (
                             select OPERATION_ID , QUANTITY , PRODUCT_ID , TYPE , STOCK_ID
                             from wh_operation_details as wod
                             where wod.DELETED = 0
                               and wod.STATUS > 0
                               and wod.IS_BACK=0
                         )
                     select distinct od.PRODUCT_ID  ,
                                     sum( if(od.TYPE =1 , od.QUANTITY , od.QUANTITY*-1)) over (partition by od.PRODUCT_ID) as cardex
                     from operation as o
                              join org on o.ORG_ID = org.ID
                              join operation_details as od on od.OPERATION_ID = o.id
                              join stock as s on od.STOCK_ID = s.ID and o.org_id =s.ORG_ID
                 ) ,
                 reserve as (
                     with
                         reservations as (
                             select *
                             from wh_inventory_reservation
                             where RESERVE_DATE >= 133553664000000000
                               and RESERVE_DATE <=133654340678250000+24*60*60*10000000
                         )
                     select distinct r.PRODUCT_ID  ,
                                     sum(   (COALESCE(r.Quantity,0)/POWER(10,COALESCE(c.DECIMAL_NUM,0))) ) over (partition by r.PRODUCT_ID) as res
                     from reservations as r
                              join org as o on r.ORG_ID = o.ID
                              join stock as s on r.STOCK_ID = s.ID and r.org_id =o.id
                              join product as p on p.id = r.PRODUCT_ID and p.ORG_ID = o.id
                              left join  capacity as c on c.ID = p.CAPACITY_ID
                 )
             select c.PRODUCT_ID , c.cardex , r.res ,
                    ( COALESCE(c.cardex,0)  - COALESCE(r.res,0) ) as total
             from cardex as c
             left join reserve as r on r.PRODUCT_ID = c.PRODUCT_ID
         )

    select p.*  , c.cardex , c.res , c.total
    from products as p
    join cardex as c on p.product_id = c.PRODUCT_ID

)
select * from data


